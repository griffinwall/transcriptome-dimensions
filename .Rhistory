head pca.score
pca.score[1:5,1:5]
dt = pca.score %>% select(starts_with("PC")) %>% data.table()
SD = apply(dt,2,sd)
dt_sd = data.matrix(dt) %*% diag(1/SD)
sd.score = cbind(pca.score[,SEQ_ID],data.table(dt_sd))
sd.score = cbind(pca.score[,"SEQ_ID"],data.table(dt_sd))
colnames(sd.score) = c("SEQ_ID",paste(colnames(pca.score %>% select(starts_with("PC"))),"_SD",sep = ""))
unique(round(sd.score$PC1_SD,digits = 8) == round(as.numeric(dt$PC1)/sd(as.numeric(dt$PC1)),digits = 8)) # check work
unique(round(sd.score$PC22_SD,digits = 8) == round(as.numeric(dt$PC22)/sd(as.numeric(dt$PC22)),digits = 8)) # check work
sd.score[1:5,1:5]
score_sd[1:5,1:5]
score_sd_old[1:5,1:5]
exp_cbat = cbat.dt # save normalized and batch corrected expression estimates
# merge clinical and standardized spectra scores in baseline samples
clin_spectra_sd = merge(clinical,score_sd,by="SEQ_ID")
write.csv(clin_spectra_sd,file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
,row.names = F)
# Install and load required R packages
library(dplyr)
library(data.table)
library(ggplot2)
# read in normalized and combat adjusted expression data on baseline samples
exp_cbat = read.csv(file = paste0(params$data,
"/baseline-expression-norm-combat.csv"))
# read in spectra and clinical data, remove clinical data
score_sd = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",starts_with("PC"))
load(paste0(params$data,"/20200802_pipe_out.rdata"))
View(score_sd)
load(paste0(params$data,"/20200802_pipe_out.rdata"))
View(score_sd)
# read in normalized and combat adjusted expression data on baseline samples
exp_cbat = read.csv(file = paste0(params$data,
"/baseline-expression-norm-combat.csv"))
# read in spectra and clinical data, remove clinical data
score_sd = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",starts_with("PC"))
load(paste0(params$data,"/20200802_pipe_out.rdata"))
dt.70$bin = as.factor(if_else(dt.70$score<2.424285,"low","high"))
# read in spectra and clinical data, remove clinical data
score_sd = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",starts_with("PC"))
clinical = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",!starts_with("PC"))
View(clinical)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],score_sd)
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No"]),"(-)"))
# Install and load required R packages
library(dplyr)
library(data.table)
library(ggplot2)
library(MASS)
library(survivalAnalysis)
library(lmtest)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],score_sd)
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No"]),"(-)"))
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],score_sd)
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
# Install and load required R packages
library(ggplot2)
library(MASS)
library(survivalAnalysis)
library(dplyr)
library(data.table)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],score_sd)
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
library(dplyr)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
library(data.table)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
MOD = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ ., family = "binomial")
summary(MOD)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],
score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
MOD = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ ., family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = list(d17p=MOD)
# Overall p-value
NLL = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ 1, family = "binomial")
mod.risk$d17p$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
#mod.risk$d17p$p
# Check on p-value based on signficant spectra only
#md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
#summary(md2)
#pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
mod.risk$d17p$p
# Check on p-value based on significant spectra only
md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
summary(md2)
pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR8!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR8!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR8")],score_sd)
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR8=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR8=="No"]),"(-)"))
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR8!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR8!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR8")],
score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR8=="Yes",]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR8=="No"]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR8 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR8)
# Logistic regression
MOD <- glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR8 ~ ., family = "binomial")
summary(MOD)
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(t1416=MOD))
# Overall p-value
NLL = glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR8 ~ 1, family = "binomial")
mod.risk$t1416$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$t1416$p
mod.risk$d17p$p
# Check on p-value based on significant spectra only
md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
summary(md2)
pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],
score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
MOD = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ ., family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = list(d17p=MOD)
# Overall p-value
NLL = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ 1, family = "binomial")
mod.risk$d17p$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$d17p$p
# Check on p-value based on significant spectra only
md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
summary(md2)
pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
# read in spectra and clinical data
score_sd = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",starts_with("PC"))
clinical = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",!starts_with("PC"))
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],
score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
MOD = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ ., family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = list(d17p=MOD)
# Overall p-value
NLL = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ 1, family = "binomial")
mod.risk$d17p$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$d17p$p
# Check on p-value based on significant spectra only
md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
summary(md2)
pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
# Install and load required R packages
library(ggplot2)
library(MASS)
library(survivalAnalysis)
library(dplyr)
library(data.table)
# read in spectra and clinical data
score_sd = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",starts_with("PC"))
clinical = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% dplyr::select("SEQ_ID",!starts_with("PC"))
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR11")],
score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
md.dt = DAT[,-"SEQ_ID"]
MOD = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ ., family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = list(d17p=MOD)
# Overall p-value
NLL = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ 1, family = "binomial")
mod.risk$d17p$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$d17p$p
# Check on p-value based on significant spectra only
md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
summary(md2)
pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR8!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR8!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR8")],
score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR8=="Yes",]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR8=="No"]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR8 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR8)
# Logistic regression
MOD <- glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR8 ~ ., family = "binomial")
summary(MOD)
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(t1416=MOD))
# Overall p-value
NLL = glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR8 ~ 1, family = "binomial")
mod.risk$t1416$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$t1416$p
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR13!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR13!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR13")],score_sd)
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR13=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR13=="No"]),"(-)"))
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR13!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR13!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR13")],score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR13=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR13=="No"]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR13 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR13)
# Logistic regression
MOD <- glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR13 ~ ., family = "binomial")
summary(MOD)
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(a1q=MOD))
# Overall p-value
NLL = glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR13 ~ 1, family = "binomial")
mod.risk$a1q$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR3!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR3!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR3")],score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR3=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR3=="No"]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR3 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR3)
# Logistic regression
MOD <- glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR3 ~ ., family = "binomial")
summary(MOD)
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(t414=MOD))
# Overall p-value
NLL = glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR3 ~ 1, family = "binomial")
mod.risk$t414$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$t414$p
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR13!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR13!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR13")],score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR13=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR13=="No"]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR13 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR13)
# Logistic regression
MOD <- glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR13 ~ ., family = "binomial")
summary(MOD)
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(a1q=MOD))
# Overall p-value
NLL = glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR13 ~ 1, family = "binomial")
mod.risk$a1q$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$a1q$p
DAT = merge(clinical[clinical$D_TRI_CF_ABNORMALITYPR6!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR6!="",
c("SEQ_ID","D_TRI_CF_ABNORMALITYPR6")],score_sd) %>% data.table()
print(paste("Baseline samples with data:",nrow(DAT),"(total),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR6=="Yes"]),"(+),",nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR6=="No"]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR6 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR6)
# Logistic regression
MOD <- glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR6 ~ ., family = "binomial")
summary(MOD)
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(t1114=MOD))
# Overall p-value
NLL = glm(data = DAT[,-"SEQ_ID"], formula = D_TRI_CF_ABNORMALITYPR6 ~ 1, family = "binomial")
mod.risk$t1114$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$t1114$p
DAT = merge(clinical[!is.na(clinical$D_PT_iss),c("SEQ_ID","D_PT_iss")]
,score_sd) %>% data.table() # Remove samples with missing ISS values
print(paste("Baseline samples with ISS score =",nrow(DAT)))
#DAT$ISS = as.factor(DAT$D_PT_iss)
# Logistic regression
#glm.iss <- glm(data = DAT[,-c("SEQ_ID","D_PT_iss")], formula = ISS ~ ., family = "binomial")
#summary(glm.iss)
DAT$ISS = factor(DAT$D_PT_iss, levels = c(1,2,3), ordered = TRUE) # Order dependent variable
MOD = polr(data = DAT[,-c("SEQ_ID","D_PT_iss")], formula = ISS ~ ., Hess = T) # Ordinal logistic regression model
summary(MOD)
sig = pnorm(abs(coef(summary(MOD))[1:39,"t value"]),lower.tail = FALSE)*2
nsig = data.table(sig) %>% subset(sig<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(iss=MOD))
# Overall p-value
NLL = polr(data = DAT[,-c("SEQ_ID","D_PT_iss")], formula = ISS ~ 1, Hess = T)
mod.risk$iss$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
DAT = merge(clinical[!is.na(clinical$D_PT_iss),c("SEQ_ID","D_PT_iss")]
,score_sd) %>% data.table() # Remove samples with missing ISS values
print(paste("Baseline samples with ISS score =",nrow(DAT)))
#DAT$ISS = as.factor(DAT$D_PT_iss)
# Logistic regression
#glm.iss <- glm(data = DAT[,-c("SEQ_ID","D_PT_iss")], formula = ISS ~ ., family = "binomial")
#summary(glm.iss)
DAT$ISS = factor(DAT$D_PT_iss, levels = c(1,2,3), ordered = TRUE) # Order dependent variable
MOD = polr(data = DAT[,-c("SEQ_ID","D_PT_iss")], formula = ISS ~ ., Hess = T) # Ordinal logistic regression model
summary(MOD)
sig = pnorm(abs(coef(summary(MOD))[1:39,"t value"]),lower.tail = FALSE)*2
nsig = data.table(sig) %>% subset(sig<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = c(mod.risk,list(iss=MOD))
# Overall p-value
NLL = polr(data = DAT[,-c("SEQ_ID","D_PT_iss")], formula = ISS ~ 1, Hess = T)
mod.risk$iss$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$iss$p
# read in spectra and clinical data
spectra_clinical = read.csv(file = paste0(params$data,
"/baseline-clinical-spectra-sd.csv")
) %>% data.table()
DAT = spectra_clinical %>%
dplyr::select("D_TRI_CF_ABNORMALITYPR11",starts_with("PC")) %>%
dplyr::filter(D_TRI_CF_ABNORMALITYPR11!="Not Done" | clinical$D_TRI_CF_ABNORMALITYPR11!="")
DAT
DAT = spectra_clinical %>%
dplyr::select("D_TRI_CF_ABNORMALITYPR11",starts_with("PC")) %>%
dplyr::filter(D_TRI_CF_ABNORMALITYPR11!="Not Done" & clinical$D_TRI_CF_ABNORMALITYPR11!="")
DAT
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
DAT = spectra_clinical %>%
dplyr::select("D_TRI_CF_ABNORMALITYPR11",starts_with("PC")) %>%
dplyr::filter(D_TRI_CF_ABNORMALITYPR11!="Not Done" &
clinical$D_TRI_CF_ABNORMALITYPR11!="")
DAT
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
MOD = glm(data = DAT,formula = D_TRI_CF_ABNORMALITYPR11 ~ .,family = "binomial")
summary(MOD)
DAT = spectra_clinical %>%
dplyr::select("D_TRI_CF_ABNORMALITYPR11",starts_with("PC")) %>%
dplyr::filter(D_TRI_CF_ABNORMALITYPR11!="Not Done" &
clinical$D_TRI_CF_ABNORMALITYPR11!="")
DAT
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
MOD = glm(data = DAT,formula = D_TRI_CF_ABNORMALITYPR11 ~ .,family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>% subset(V1<0.05) %>% nrow() # Count sig dimensions in model
print(paste0(nsig," of the ",ncol(score_sd)-1," dimensions were significat at p < 0.05 in the combined model"))
# Save model
mod.risk = list(d17p=MOD)
# Overall p-value
NLL = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ 1, family = "binomial")
mod.risk$d17p$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$d17p$p
# Check on p-value based on significant spectra only
#md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
#summary(md2)
#pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
DAT = spectra_clinical %>%
dplyr::select("D_TRI_CF_ABNORMALITYPR11",starts_with("PC")) %>%
dplyr::filter(D_TRI_CF_ABNORMALITYPR11!="Not Done" &
clinical$D_TRI_CF_ABNORMALITYPR11!="")
DAT
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
MOD = glm(data = DAT,formula = D_TRI_CF_ABNORMALITYPR11 ~ .,family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = summary(MOD)$coeff[-1,"Pr(>|z|)"] %>%
data.tabe() %>% subset(V1<0.05) %>% nrow()
DAT = spectra_clinical %>%
dplyr::select("D_TRI_CF_ABNORMALITYPR11",starts_with("PC")) %>%
dplyr::filter(D_TRI_CF_ABNORMALITYPR11!="Not Done" &
clinical$D_TRI_CF_ABNORMALITYPR11!="")
DAT
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
MOD = glm(data = DAT,formula = D_TRI_CF_ABNORMALITYPR11 ~ .,family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = summary(MOD)$coeff[-1,"Pr(>|z|)"] %>%
data.table() %>% subset(V1<0.05) %>% nrow()
summary(MOD)$coeff[-1,"Pr(>|z|)"] %>%
data.table()
summary(MOD)$coeff[-1,"Pr(>|z|)"]
summary(MOD)$coeff[-1,"Pr(>|z|)"] < .05
summary(MOD)$coeff[-1,"Pr(>|z|)"] < .05 %>% sum()
summary(MOD)$coeff[-1,"Pr(>|z|)"] < .05 %>% count()
summary(MOD)$coeff[-1,"Pr(>|z|)"] < .05 %>% nrow()
# Count number of significant spectra
nsig = summary(MOD)$coeff[-1,"Pr(>|z|)"] < .05 %>% summarise_if(TRUE)
nrow(summary(MOD)$coeff[-1,"Pr(>|z|)"] < .05)
ength(summary(MOD)$coeff[-1,"Pr(>|z|)"] < .05==TRUE)
DAT = spectra_clinical %>%
dplyr::select("D_TRI_CF_ABNORMALITYPR11",starts_with("PC")) %>%
dplyr::filter(D_TRI_CF_ABNORMALITYPR11!="Not Done" &
clinical$D_TRI_CF_ABNORMALITYPR11!="")
DAT
print(paste("Baseline samples with data:",nrow(DAT),"(total),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="Yes",]),"(+),",
nrow(DAT[DAT$D_TRI_CF_ABNORMALITYPR11=="No",]),"(-)"))
DAT$D_TRI_CF_ABNORMALITYPR11 = as.factor(DAT$D_TRI_CF_ABNORMALITYPR11)
# Logistic regression
MOD = glm(data = DAT,formula = D_TRI_CF_ABNORMALITYPR11 ~ .,family = "binomial")
summary(MOD)
# Count number of significant spectra
nsig = data.table(summary(MOD)$coeff[-1,"Pr(>|z|)"]) %>%
subset(V1<0.05) %>% nrow()
print(paste0(nsig," of 39 spectra significant (p<.05)"))
# Save model
mod.risk = list(d17p=MOD)
# Overall p-value
NLL = glm(data = DAT,formula = D_TRI_CF_ABNORMALITYPR11 ~ 1,family = "binomial")
mod.risk$d17p$p = pchisq(deviance(NLL)-deviance(MOD),
df.residual(NLL)-df.residual(MOD),
lower.tail=FALSE)
mod.risk$d17p$p
# Check on p-value based on significant spectra only
#md2 = glm(data = md.dt, formula = D_TRI_CF_ABNORMALITYPR11 ~ PC3_SD + PC6_SD + PC39_SD, family = "binomial")
#summary(md2)
#pchisq(deviance(NLL)-deviance(md2),df.residual(NLL)-df.residual(md2),lower.tail=FALSE)
